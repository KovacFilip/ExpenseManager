@page "/UserHome";
@using DB.models;
@using System.Text.Json;
@inject HttpClient httpClient;
@inject AuthService AuthService;

@if (!loaded) {
    <div>Unable to load the necesary data</div>
}

@if (loaded && expenses != null) 
{
    <label>Filter: </label>
    <input type="text" @bind="filter">
    @foreach (var expense in expenses)
    {
        @if (filter == "")
        {
            <ExpenseItem Expense=@expense></ExpenseItem>
        } else if (@expense.Category.Contains(filter)) {
            <ExpenseItem Expense=@expense></ExpenseItem>
        }
    }
} else if (loaded) {
    <h2>You don't have any expenses at the moment</h2>
}

@code {
        private List<Expense>? expenses;
        private bool loaded;
        private string filter = "";
        protected override async Task OnInitializedAsync()
        {
            var response = await httpClient.PostAsync("/api/getExpenses", new StringContent(JsonSerializer.Serialize(AuthService.Person))); 

            if ((int) response.StatusCode == 200) {
                string res = await response.Content.ReadAsStringAsync(); 
                List<Expense>? exps = JsonSerializer.Deserialize<List<Expense>>(res);
                
                if (exps == null) {
                    expenses = new List<Expense>();
                } else {
                    expenses = exps;
                }

                loaded = true;
                
            } else {
                expenses = new List<Expense>();
                loaded = false;
            }
        }
}

